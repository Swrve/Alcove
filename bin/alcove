#!/usr/bin/ruby
$:.unshift File.expand_path('../../lib', __FILE__)
require 'alcove'
require 'alcove/version'
require 'ostruct'
require 'optparse'

options = OpenStruct.new
OptionParser.new do |opts|
    opts.banner = "Usage: alcove --product-name <product-name> [options]"

    opts.on('-h', '--help', 'Displays the help screen') do
        puts opts
        exit
    end

    options.output_directory = 'alcove-report'
    opts.on('-o', '--output-directory DIR', 'Place report in DIR instead of default') do |o|
        options.output_directory = o
    end

    options.product_name = ''
    opts.on('-p', '--product-name NAME', 'The name of your product') do |p|
        options.product_name = p
    end

    options.remove_filter = []
    opts.on('-r', '--remove-filter X,Y,Z...', ::Array, 'A list of filters (e.g. *.h,main.m)') do |r|
        options.remove_filter = r
    end

    options.verbose = false
    opts.on('-v', '--verbose', 'Output additional information') do
        options.verbose = true
    end

    opts.on_tail('--version', 'Show version') do
        puts Alcove::VERSION
        exit
    end

    begin
        opts.parse!(ARGV)
        if options.product_name.length == 0
            puts '--product-name is required'.yellow
            puts opts
            exit(1)
        end
    rescue OptionParser::InvalidOption => e
        puts e
        puts opts
        exit(1)
    end
end

alcoveOptions = OpenStruct.new
alcoveOptions.product_name = options.product_name
alcoveOptions.output_directory = options.output_directory
alcoveOptions.remove_filter = options.remove_filter
alcoveOptions.verbose = options.verbose

alcove = Alcove.new(alcoveOptions)
alcove.generate_report
